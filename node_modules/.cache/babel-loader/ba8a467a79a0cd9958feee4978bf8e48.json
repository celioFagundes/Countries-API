{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\celio\\\\OneDrive\\\\Documents\\\\Programacao\\\\React\\\\countries-api-rest\\\\src\\\\components\\\\DetailPage\\\\DetailPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Wrapper, Back, Container, Image, InfoContainer, Title, InfoColumns, Column, Info, BordersContainer, Button, BorderLabel, Span } from './styles';\nimport { Link } from 'react-router-dom';\nimport { BsArrowLeft } from 'react-icons/bs';\nimport { useCountriesContext } from '../ContextCountries/context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DetailPage({\n  match,\n  theme\n}) {\n  _s();\n\n  const {\n    countries\n  } = useCountriesContext();\n  const [country, setCountry] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [nativeName, setNativeName] = useState([]);\n  const [currencies, setCurrencies] = useState([]);\n  const [languagesObject, setLanguagesObject] = useState();\n  const [languagesList, setLanguagesList] = useState([]);\n  const [borders, setBorders] = useState([]);\n  const [countriesId, setCountriesId] = useState([]); //All countries countries  codes (like : 'FRA') and names\n\n  const [borderCountries, setBorderCountries] = useState([]);\n  useEffect(() => {\n    if (!countries.length > 0) {\n      fetch('https://restcountries.com/v3.1/all').then(res => res.json()).then(data => setCountries(data));\n    }\n  }, [setCountries, countries.length]);\n  useEffect(() => {\n    setLanguagesList([]);\n    setBorderCountries([]);\n    fetch('https://restcountries.com/v3.1/alpha/' + match.params.id).then(res => res.json()).then(data => {\n      setCountry(data[0]);\n      setNativeName(data[0].name.nativeName);\n      setCurrencies(data[0].currencies);\n      setLanguagesObject(data[0].languages);\n      setBorders(data[0].borders);\n      setLoading(false);\n    });\n  }, [match.params.id]); //Converts the language objects into an array\n\n  useEffect(() => {\n    for (let lang in languagesObject) {\n      setLanguagesList(languagesList => [...languagesList, languagesObject[lang]]);\n    }\n  }, [languagesObject]); //Create a array of obj with id as country cca3 and name as country name, using useCallback to solve eslint dependency error\n\n  const createID = useCallback(() => {\n    for (let c in countries) {\n      setCountriesId(countriesId => [...countriesId, {\n        name: countries[c].name.common,\n        id: countries[c].cca3\n      }]);\n    }\n  }, [countries]);\n  useEffect(() => {\n    createID();\n  }, [countries, createID]); //Compares the obj array with the borders arrays to match the border and cca3 parameters\n\n  useEffect(() => {\n    if (borders) {\n      let filter = countriesId.filter(item => borders.includes(item.id));\n      setBorderCountries(borderCountries => [...borderCountries, ...filter]);\n    }\n  }, [borders, countriesId]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 16\n    }, this);\n  }\n\n  const renderCapitals = () => {\n    if (country.capital) {\n      return country.capital.map((cap, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", index !== country.capital.length - 1 ? cap + ',' : cap, \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this));\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No capital\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 20\n      }, this);\n    }\n  };\n\n  const renderlanguagesObject = () => {\n    if (languagesList.length > 0) {\n      return languagesList.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: index !== languagesList.length - 1 ? item + ',' : item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this));\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No languages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 20\n      }, this);\n    }\n  };\n\n  const renderBorders = () => {\n    if (borderCountries.length > 0) {\n      return borderCountries.map((item, index) => /*#__PURE__*/_jsxDEV(Link, {\n        to: '/details/' + item.id,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 63\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this));\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No borders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 20\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      style: {\n        textDecoration: 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(Back, {\n        children: [/*#__PURE__*/_jsxDEV(BsArrowLeft, {\n          color: theme === 'dark' ? '#fff' : '#000',\n          size: 22\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 23\n        }, this), \"Back\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        src: country.flags.svg,\n        alt: country.name.common\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InfoContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: country.name.common\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InfoColumns, {\n          children: [/*#__PURE__*/_jsxDEV(Column, {\n            children: [/*#__PURE__*/_jsxDEV(Info, {\n              children: [/*#__PURE__*/_jsxDEV(Span, {\n                children: \"Native Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 35\n              }, this), country.name.nativeName ? Object.values(nativeName)[0].common : 'No native name']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Info, {\n              children: [/*#__PURE__*/_jsxDEV(Span, {\n                children: \"Population:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 35\n              }, this), country.population]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Info, {\n              children: [/*#__PURE__*/_jsxDEV(Span, {\n                children: \"Region:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 35\n              }, this), country.region]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Info, {\n              children: [/*#__PURE__*/_jsxDEV(Span, {\n                children: \"Sub Region:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 35\n              }, this), country.subregion ? country.subregion : 'No subregions']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Info, {\n              children: [/*#__PURE__*/_jsxDEV(Span, {\n                children: \"Capital:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 35\n              }, this), renderCapitals()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            children: [/*#__PURE__*/_jsxDEV(Info, {\n              children: [/*#__PURE__*/_jsxDEV(Span, {\n                children: \"Top Level Domain:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 35\n              }, this), country.tld]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Info, {\n              children: [/*#__PURE__*/_jsxDEV(Span, {\n                children: \"Currencies:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 35\n              }, this), country.currencies ? Object.values(currencies)[0].name : 'No currencies']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Info, {\n              children: [/*#__PURE__*/_jsxDEV(Span, {\n                children: \"Languages:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 35\n              }, this), renderlanguagesObject()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(BordersContainer, {\n          children: [/*#__PURE__*/_jsxDEV(BorderLabel, {\n            children: /*#__PURE__*/_jsxDEV(Span, {\n              children: \"Border Countries:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this), renderBorders()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DetailPage, \"7JCncrdbe6EGmqV71naoqLeDEiM=\", false, function () {\n  return [useCountriesContext];\n});\n\n_c = DetailPage;\nexport default DetailPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailPage\");","map":{"version":3,"sources":["C:/Users/celio/OneDrive/Documents/Programacao/React/countries-api-rest/src/components/DetailPage/DetailPage.js"],"names":["React","useState","useEffect","useCallback","Wrapper","Back","Container","Image","InfoContainer","Title","InfoColumns","Column","Info","BordersContainer","Button","BorderLabel","Span","Link","BsArrowLeft","useCountriesContext","DetailPage","match","theme","countries","country","setCountry","loading","setLoading","nativeName","setNativeName","currencies","setCurrencies","languagesObject","setLanguagesObject","languagesList","setLanguagesList","borders","setBorders","countriesId","setCountriesId","borderCountries","setBorderCountries","length","fetch","then","res","json","data","setCountries","params","id","name","languages","lang","createID","c","common","cca3","filter","item","includes","renderCapitals","capital","map","cap","index","renderlanguagesObject","renderBorders","textDecoration","flags","svg","Object","values","population","region","subregion","tld"],"mappings":"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","sourcesContent":["import React, {useState,useEffect,useCallback} from 'react'\r\nimport { Wrapper,Back,Container ,Image, InfoContainer, Title, InfoColumns, Column,Info,BordersContainer, Button, BorderLabel, Span,} from './styles'\r\n\r\nimport { Link} from 'react-router-dom'\r\nimport {BsArrowLeft} from 'react-icons/bs'\r\nimport { useCountriesContext } from '../ContextCountries/context'\r\nfunction DetailPage({match,theme}) {\r\n    \r\n    const {countries} = useCountriesContext()\r\n    const [country,setCountry] = useState([])\r\n    const [loading,setLoading] = useState(true)\r\n    const [nativeName,setNativeName] = useState([])\r\n    const [currencies,setCurrencies] = useState([])\r\n    const [languagesObject,setLanguagesObject] = useState()\r\n    const [languagesList,setLanguagesList] = useState([])\r\n    const [borders,setBorders] = useState([])\r\n    const [countriesId,setCountriesId] = useState([]) //All countries countries  codes (like : 'FRA') and names\r\n    const [borderCountries,setBorderCountries] = useState([]) \r\n    \r\n    useEffect(() => {\r\n        \r\n        if(!countries.length > 0){\r\n        fetch('https://restcountries.com/v3.1/all')\r\n        .then(res => res.json())\r\n        .then(data => setCountries(data))\r\n        \r\n         }\r\n        \r\n    }, [setCountries,countries.length])\r\n    useEffect(() =>{\r\n        setLanguagesList([])\r\n        setBorderCountries([])\r\n        fetch('https://restcountries.com/v3.1/alpha/' + match.params.id )\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setCountry(data[0])\r\n            setNativeName(data[0].name.nativeName)\r\n            setCurrencies(data[0].currencies)\r\n            setLanguagesObject(data[0].languages)\r\n            setBorders(data[0].borders)\r\n            setLoading(false)\r\n        })\r\n\r\n    }, [match.params.id])\r\n\r\n    //Converts the language objects into an array\r\n    useEffect(() =>{\r\n        \r\n        for(let lang in languagesObject){\r\n            setLanguagesList( languagesList =>[...languagesList,languagesObject[lang]])\r\n        }\r\n    \r\n    },[languagesObject])\r\n    \r\n    //Create a array of obj with id as country cca3 and name as country name, using useCallback to solve eslint dependency error\r\n\r\n    const createID = useCallback(() => {\r\n\r\n            for(let c in countries){\r\n                setCountriesId(countriesId =>[...countriesId, {\r\n                    name : countries[c].name.common,\r\n                    id: countries[c].cca3\r\n                }])\r\n            }\r\n        }, [countries],\r\n    )\r\n\r\n    useEffect(() =>{\r\n\r\n        createID()\r\n        \r\n    },[countries,createID])\r\n\r\n    //Compares the obj array with the borders arrays to match the border and cca3 parameters\r\n    useEffect(()=>{\r\n        if(borders){\r\n        let filter = countriesId.filter(item => borders.includes(item.id))\r\n        setBorderCountries(borderCountries =>[...borderCountries,...filter])\r\n        }\r\n    },[borders,countriesId])\r\n\r\n    if(loading){\r\n        return <div></div>\r\n    }\r\n\r\n    \r\n    const renderCapitals = () =>{\r\n        \r\n        if(country.capital){\r\n        return  country.capital.map((cap,index) =>(\r\n            <div key = {index}> {index !== country.capital.length - 1 ? cap + ',' : cap} </div>\r\n            ))}\r\n        else{\r\n            return <div>No capital</div>\r\n        }\r\n    }\r\n\r\n    const renderlanguagesObject = () =>{\r\n        if(languagesList.length > 0){\r\n         return languagesList.map((item,index) =>(\r\n            <div key = {index}>\r\n                {index !== languagesList.length -1 ? item + ',' : item}\r\n            </div>))}  \r\n        else{\r\n            return <div>No languages</div>\r\n        }\r\n    }\r\n    \r\n    const renderBorders = () =>{\r\n        if(borderCountries.length > 0){\r\n            return borderCountries.map((item,index) => (\r\n            <Link to = {'/details/' + item.id} key = {index} ><Button>{item.name}</Button></Link>))\r\n        }else{\r\n            return <div>No borders</div>\r\n        }\r\n    }\r\n    return (    \r\n        <Wrapper className = 'container'>\r\n            <Link to ='/' style={{ textDecoration: 'none' }}>\r\n                <Back><BsArrowLeft color = {theme ==='dark' ? '#fff' : '#000'} size = {22}/>Back</Back>\r\n            </Link>\r\n            <Container >\r\n                <Image src = {country.flags.svg} alt = {country.name.common}/>\r\n                <InfoContainer>\r\n                    <Title>{country.name.common}</Title>\r\n                    <InfoColumns>\r\n                        <Column>\r\n                            <Info><Span>Native Name:</Span>\r\n                                { country.name.nativeName ? Object.values(nativeName)[0].common : 'No native name'}\r\n                             </Info>\r\n                            <Info><Span>Population:</Span>\r\n                                {country.population}\r\n                            </Info>\r\n                            <Info><Span>Region:</Span>\r\n                                {country.region}\r\n                            </Info>\r\n                            <Info><Span>Sub Region:</Span>\r\n                                {country.subregion ? country.subregion : 'No subregions'}\r\n                            </Info>\r\n                            <Info><Span>Capital:</Span> \r\n                                {renderCapitals()}\r\n                            </Info>\r\n                        </Column>\r\n                        <Column>\r\n                            <Info><Span>Top Level Domain:</Span>\r\n                                {country.tld}\r\n                            </Info>\r\n                            <Info><Span>Currencies:</Span>\r\n                                {country.currencies ? Object.values(currencies)[0].name : 'No currencies'}\r\n                             </Info>\r\n                            <Info><Span>Languages:</Span> \r\n                                {renderlanguagesObject()}\r\n                            </Info>\r\n                        </Column>\r\n                    </InfoColumns>\r\n                    <BordersContainer>\r\n                        <BorderLabel><Span>Border Countries:</Span></BorderLabel>\r\n                        {renderBorders()}\r\n                    </BordersContainer>\r\n                </InfoContainer>\r\n            </Container>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default DetailPage\r\n"]},"metadata":{},"sourceType":"module"}