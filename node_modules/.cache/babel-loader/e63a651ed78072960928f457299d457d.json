{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\celio\\\\OneDrive\\\\Documents\\\\Programacao\\\\React\\\\countries-api-rest\\\\src\\\\components\\\\ContextCountries\\\\context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useContext, createContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountriesContext = /*#__PURE__*/createContext();\nexport default function Context({\n  children\n}) {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  useEffect(() => {\n    const temp = localStorage.getItem('list');\n    const ListCarregada = JSON.parse(temp);\n\n    if (ListCarregada) {\n      setCountries(ListCarregada);\n    }\n  }, [setCountries]); // Update to-do list saved on LocalStorage\n\n  useEffect(() => {\n    const temp = JSON.stringify(countries);\n    localStorage.setItem('list', temp);\n  }, [countries, setCountries]);\n  return /*#__PURE__*/_jsxDEV(CountriesContext.Provider, {\n    value: {\n      countries,\n      setCountries\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Context, \"RTTBEuq9LzfuBTbbWaURrQQp4Pg=\");\n\n_c = Context;\n;\nexport function useCountriesContext() {\n  _s2();\n\n  const context = useContext(CountriesContext);\n  const {\n    countries,\n    setCountries\n  } = context;\n  return {\n    countries,\n    setCountries\n  };\n}\n\n_s2(useCountriesContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"Context\");","map":{"version":3,"sources":["C:/Users/celio/OneDrive/Documents/Programacao/React/countries-api-rest/src/components/ContextCountries/context.js"],"names":["React","useState","useContext","createContext","useEffect","CountriesContext","Context","children","countries","setCountries","temp","localStorage","getItem","ListCarregada","JSON","parse","stringify","setItem","useCountriesContext","context"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,UAAxB,EAAmCC,aAAnC,EAAiDC,SAAjD,QAAiE,OAAjE;;AAEA,MAAMC,gBAAgB,gBAAGF,aAAa,EAAtC;AAEA,eAAe,SAASG,OAAT,CAAiB;AAACC,EAAAA;AAAD,CAAjB,EAA8B;AAAA;;AACzC,QAAM,CAACC,SAAD,EAAWC,YAAX,IAA2BR,QAAQ,CAAC,EAAD,CAAzC;AAEAG,EAAAA,SAAS,CAAC,MAAK;AACX,UAAMM,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;AACA,UAAMC,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAtB;;AACA,QAAGG,aAAH,EAAiB;AACbJ,MAAAA,YAAY,CAACI,aAAD,CAAZ;AACH;AACJ,GANQ,EAMN,CAACJ,YAAD,CANM,CAAT,CAHyC,CAWzC;;AACAL,EAAAA,SAAS,CAAC,MAAK;AACX,UAAMM,IAAI,GAAGI,IAAI,CAACE,SAAL,CAAeR,SAAf,CAAb;AACAG,IAAAA,YAAY,CAACM,OAAb,CAAqB,MAArB,EAA4BP,IAA5B;AACH,GAHQ,EAGP,CAACF,SAAD,EAAWC,YAAX,CAHO,CAAT;AAKA,sBACI,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAI;AAACD,MAAAA,SAAD;AAAWC,MAAAA;AAAX,KAApC;AAAA,cACSF;AADT;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAtBuBD,O;;KAAAA,O;AAsBvB;AAED,OAAO,SAASY,mBAAT,GAA8B;AAAA;;AACjC,QAAMC,OAAO,GAAGjB,UAAU,CAACG,gBAAD,CAA1B;AACA,QAAM;AAACG,IAAAA,SAAD;AAAWC,IAAAA;AAAX,MAA2BU,OAAjC;AACA,SAAO;AAACX,IAAAA,SAAD;AAAWC,IAAAA;AAAX,GAAP;AACH;;IAJeS,mB","sourcesContent":["import React, {useState,useContext,createContext,useEffect} from 'react'\r\n\r\nconst CountriesContext = createContext();\r\n\r\nexport default function Context({children})  {\r\n    const [countries,setCountries] = useState([])\r\n\r\n    useEffect(() =>{\r\n        const temp = localStorage.getItem('list')\r\n        const ListCarregada = JSON.parse(temp)\r\n        if(ListCarregada){\r\n            setCountries(ListCarregada)\r\n        }\r\n    }, [setCountries])\r\n\r\n    // Update to-do list saved on LocalStorage\r\n    useEffect(() =>{\r\n        const temp = JSON.stringify(countries)\r\n        localStorage.setItem('list',temp)\r\n    },[countries,setCountries])\r\n\r\n    return (\r\n        <CountriesContext.Provider value = {{countries,setCountries}}>\r\n                {children}\r\n        </CountriesContext.Provider>\r\n    )\r\n};\r\n\r\nexport function useCountriesContext(){\r\n    const context = useContext(CountriesContext);\r\n    const {countries,setCountries} = context;\r\n    return {countries,setCountries};\r\n}"]},"metadata":{},"sourceType":"module"}