{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\celio\\\\OneDrive\\\\Documents\\\\Programacao\\\\React\\\\countries-api-rest\\\\src\\\\components\\\\HomePage\\\\HomePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useCountriesContext } from '../ContextCountries/context';\nimport { Wrapper, Container, InputsContainer, SearchBox, SearchInput, FilterSelect, FilterOption, SearchIcon, CardsContainer, CountryCard, Image, CountryTitle, CountryInfo, Info, InfoSpan } from '../HomePage/style';\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HomePage(props) {\n  _s();\n\n  const {\n    countries,\n    setCountries\n  } = useCountriesContext();\n  const [filterList, setFilterList] = useState([]);\n  const [displayList, setDisplayList] = useState([]);\n  const [selected, setSelected] = useState('');\n  const [input, setInput] = useState('');\n  useEffect(() => {\n    if (!countries) {\n      fetch('https://restcountries.com/v3.1/all').then(res => res.json()).then(data => setCountries(data));\n    }\n  }, []);\n\n  const handleChange = evt => {\n    setInput(evt.target.value);\n  };\n\n  const handleSelect = e => {\n    setSelected(e.target.value);\n  };\n\n  useEffect(() => {\n    if (selected !== 'All') {\n      setFilterList([]);\n      let newList = countries.filter(item => item.region === selected && item.name.includes(input));\n      setFilterList(filterList => [...filterList, ...newList]);\n    } else {\n      setDisplayList(countries);\n    }\n  }, [selected]);\n  useEffect(() => {\n    setDisplayList(filterList);\n    console.log(1);\n  }, [filterList]);\n\n  if (!countries) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(InputsContainer, {\n        children: [/*#__PURE__*/_jsxDEV(SearchBox, {\n          children: [/*#__PURE__*/_jsxDEV(SearchIcon, {\n            children: /*#__PURE__*/_jsxDEV(AiOutlineSearch, {\n              size: 22,\n              color: props.theme === 'dark' ? '#fff' : '#000'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SearchInput, {\n            placeholder: \"Search for a country ..\",\n            type: \"text\",\n            onChange: handleChange,\n            value: input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FilterSelect, {\n          value: selected,\n          onChange: handleSelect,\n          children: [/*#__PURE__*/_jsxDEV(FilterOption, {\n            value: \"\",\n            hidden: true,\n            children: \"Filter by Region\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FilterOption, {\n            value: \"All\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FilterOption, {\n            value: \"Africa\",\n            children: \"Africa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FilterOption, {\n            value: \"Americas\",\n            children: \"Americas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FilterOption, {\n            value: \"Asia\",\n            children: \"Asia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FilterOption, {\n            value: \"Europe\",\n            children: \"Europe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FilterOption, {\n            value: \"Oceania\",\n            children: \"Oceania\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardsContainer, {\n        children: displayList.map((item, index) => /*#__PURE__*/_jsxDEV(Link, {\n          to: '/details/' + item.cca2,\n          children: /*#__PURE__*/_jsxDEV(CountryCard, {\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              src: item.flags.svg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CountryInfo, {\n              children: [/*#__PURE__*/_jsxDEV(CountryTitle, {\n                children: item.name.common\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Info, {\n                children: [/*#__PURE__*/_jsxDEV(InfoSpan, {\n                  children: \"Population:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 43\n                }, this), \" \", item.population.toLocaleString('pt-br')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Info, {\n                children: [/*#__PURE__*/_jsxDEV(InfoSpan, {\n                  children: \"Region:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 43\n                }, this), \" \", item.region]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Info, {\n                children: [/*#__PURE__*/_jsxDEV(InfoSpan, {\n                  children: \"Capital:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 43\n                }, this), \" \", item.capital ? item.capital : 'No capital']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 8\n  }, this);\n}\n\n_s(HomePage, \"4wUKiSblmRRW7uo8y1/0Ty9W0wU=\", false, function () {\n  return [useCountriesContext];\n});\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/celio/OneDrive/Documents/Programacao/React/countries-api-rest/src/components/HomePage/HomePage.js"],"names":["React","useEffect","useState","useCountriesContext","Wrapper","Container","InputsContainer","SearchBox","SearchInput","FilterSelect","FilterOption","SearchIcon","CardsContainer","CountryCard","Image","CountryTitle","CountryInfo","Info","InfoSpan","AiOutlineSearch","Link","HomePage","props","countries","setCountries","filterList","setFilterList","displayList","setDisplayList","selected","setSelected","input","setInput","fetch","then","res","json","data","handleChange","evt","target","value","handleSelect","e","newList","filter","item","region","name","includes","console","log","theme","map","index","cca2","flags","svg","common","population","toLocaleString","capital"],"mappings":"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","sourcesContent":["import React ,{useEffect,useState}from 'react'\r\nimport { useCountriesContext } from '../ContextCountries/context'\r\nimport { \r\n    Wrapper,\r\n    Container,\r\n    InputsContainer,\r\n    SearchBox,\r\n    SearchInput,\r\n    FilterSelect,\r\n    FilterOption,\r\n    SearchIcon,\r\n    CardsContainer,\r\n    CountryCard,\r\n    Image,\r\n    CountryTitle,\r\n    CountryInfo,\r\n    Info,InfoSpan } from '../HomePage/style'\r\nimport {AiOutlineSearch} from 'react-icons/ai'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction HomePage(props) {\r\n\r\n    const {countries,setCountries} = useCountriesContext()\r\n    const [ filterList, setFilterList] = useState([])\r\n    const [ displayList,setDisplayList] = useState([])\r\n    const [selected, setSelected] = useState('')\r\n    const [input,setInput] = useState('')\r\n\r\n\r\n    useEffect(() => {\r\n        if(!countries){\r\n        fetch('https://restcountries.com/v3.1/all')\r\n        .then(res => res.json())\r\n        .then(data => setCountries(data))\r\n    }\r\n\r\n    }, [])\r\n    \r\n\r\n    const handleChange = evt => {\r\n        setInput(evt.target.value)\r\n    }\r\n    \r\n    const handleSelect = e =>{\r\n        setSelected(e.target.value)\r\n    }\r\n    useEffect(() =>{\r\n        if(selected !== 'All'){\r\n        setFilterList([])\r\n        let newList = countries.filter(item => item.region === selected && item.name.includes(input))\r\n        setFilterList(filterList => [...filterList,...newList])\r\n        }else{\r\n            setDisplayList(countries)\r\n        }\r\n    },[selected])\r\n\r\n    useEffect(() =>{\r\n        setDisplayList(filterList)\r\n        console.log(1)\r\n    },[filterList])\r\n    if(!countries){\r\n        return <div>loading</div>\r\n    }\r\n\r\n   \r\n    \r\n    return (\r\n       <Wrapper>\r\n           <Container className ='container'>\r\n                <InputsContainer>\r\n                    <SearchBox>\r\n                        <SearchIcon>\r\n                            <AiOutlineSearch size = {22} color = {props.theme === 'dark' ? '#fff' : '#000'}/>\r\n                        </SearchIcon>\r\n                        <SearchInput placeholder = 'Search for a country ..' type = 'text' onChange = {handleChange} value = {input}/>\r\n                    </SearchBox>\r\n                    <FilterSelect value = {selected} onChange = {handleSelect}>\r\n                        <FilterOption value=\"\" hidden>Filter by Region</FilterOption>\r\n                        <FilterOption value ='All'>All</FilterOption>\r\n                        <FilterOption value ='Africa'>Africa</FilterOption>\r\n                        <FilterOption value ='Americas'>Americas</FilterOption>\r\n                        <FilterOption value ='Asia'>Asia</FilterOption>\r\n                        <FilterOption value ='Europe'>Europe</FilterOption>\r\n                        <FilterOption value ='Oceania'>Oceania</FilterOption>\r\n                    </FilterSelect>\r\n                </InputsContainer>\r\n                <CardsContainer>\r\n                    {displayList.map((item,index) =>(\r\n                        <Link to = {'/details/' + item.cca2} key = {index}>\r\n                            <CountryCard key = {index}>\r\n                                <Image src = {item.flags.svg}/>\r\n                                <CountryInfo>\r\n                                    <CountryTitle>{item.name.common}</CountryTitle>\r\n                                    <Info><InfoSpan>Population:</InfoSpan> {item.population.toLocaleString('pt-br')}</Info>\r\n                                    <Info><InfoSpan>Region:</InfoSpan> {item.region}</Info>\r\n                                    <Info><InfoSpan>Capital:</InfoSpan> {item.capital ? item.capital : 'No capital'}</Info>\r\n                                </CountryInfo>\r\n                            </CountryCard>\r\n                        </Link>\r\n                        \r\n                    ))}\r\n                    \r\n                </CardsContainer>\r\n           </Container>\r\n       </Wrapper>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n"]},"metadata":{},"sourceType":"module"}