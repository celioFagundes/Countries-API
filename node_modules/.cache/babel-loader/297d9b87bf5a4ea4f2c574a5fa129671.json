{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\celio\\\\OneDrive\\\\Documents\\\\Programacao\\\\React\\\\countries-api-rest\\\\src\\\\components\\\\DetailPage\\\\DetailPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Wrapper, Back, Container, Image, InfoContainer, Title, InfoColumns, Column, Info, BordersContainer, Button, Strong } from './styles';\nimport { Link } from 'react-router-dom';\nimport { BsArrowLeft } from 'react-icons/bs';\nimport { useCountriesContext } from '../ContextCountries/context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DetailPage({\n  match,\n  theme\n}) {\n  _s();\n\n  const {\n    countries,\n    setCountries\n  } = useCountriesContext();\n  const [country, setCountry] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [nativeName, setNativeName] = useState([]);\n  const [currencies, setCurrencies] = useState([]);\n  const [languages, setLanguages] = useState();\n  const [langs, setLangs] = useState([]);\n  const [borders, setBorders] = useState([]);\n  const [convertedBorders, setConvertedBorders] = useState([]);\n  const [filterBorder, setFilterBorder] = useState([]);\n  useEffect(() => {\n    setLangs([]);\n    setFilterBorder([]);\n    fetch('https://restcountries.com/v3.1/alpha/' + match.params.id).then(res => res.json()).then(data => {\n      setCountry(data[0]);\n      setNativeName(data[0].name.nativeName);\n      setCurrencies(data[0].currencies);\n      setLanguages(data[0].languages);\n      setBorders(data[0].borders);\n      setLoading(false);\n    });\n  }, [match.params.id]); //Converts the language objects into an array\n\n  useEffect(() => {\n    for (let lang in languages) {\n      setLangs(langs => [...langs, languages[lang]]);\n    }\n  }, [languages]); //Create a array of ojc with id as country cca3 and name as country name\n\n  useEffect(() => {\n    for (let c in countries) {\n      setConvertedBorders(convertedBorders => [...convertedBorders, {\n        name: countries[c].name.common,\n        id: countries[c].cca3\n      }]);\n    }\n  }, [countries]); //Compares the obj array with the borders arrays to match the border and cca3 parameters\n\n  useEffect(() => {\n    if (borders) {\n      let filter = convertedBorders.filter(item => borders.includes(item.id));\n      setFilterBorder(filterBorder => [...filterBorder, ...filter]);\n    }\n  }, [borders]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 16\n    }, this);\n  }\n\n  const renderCapitals = () => {\n    if (country.capital) {\n      return country.capital.map((cap, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", index !== country.capital.length - 1 ? cap + ',' : cap, \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this));\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No capital\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 20\n      }, this);\n    }\n  };\n\n  const renderLanguages = () => {\n    if (langs.length > 0) {\n      return langs.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: index !== langs.length - 1 ? item + ',' : item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this));\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No languages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 20\n      }, this);\n    }\n  };\n\n  const renderBorders = () => {\n    if (filterBorder.length > 0) {\n      return filterBorder.map((item, index) => /*#__PURE__*/_jsxDEV(Link, {\n        to: '/details/' + item.id,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 63\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this));\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No borders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 20\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      style: {\n        textDecoration: 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(Back, {\n        children: [/*#__PURE__*/_jsxDEV(BsArrowLeft, {\n          color: theme === 'dark' ? '#fff' : '#000',\n          size: 22\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 23\n        }, this), \"Back\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        src: country.flags.svg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InfoContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: country.name.common\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InfoColumns, {\n          children: [/*#__PURE__*/_jsxDEV(Column, {\n            children: [/*#__PURE__*/_jsxDEV(Info, {\n              children: [/*#__PURE__*/_jsxDEV(Strong, {\n                children: \"Native Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 35\n              }, this), country.name.nativeName ? Object.values(nativeName)[0].common : 'No native name']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Info, {\n              children: [/*#__PURE__*/_jsxDEV(Strong, {\n                children: \"Population:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 35\n              }, this), country.population]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Info, {\n              children: [/*#__PURE__*/_jsxDEV(Strong, {\n                children: \"Region:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 35\n              }, this), country.region]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Info, {\n              children: [/*#__PURE__*/_jsxDEV(Strong, {\n                children: \"Sub Region:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 35\n              }, this), country.subregion ? country.subregion : 'No subregions']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Info, {\n              children: [/*#__PURE__*/_jsxDEV(Strong, {\n                children: \"Capital:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 35\n              }, this), renderCapitals()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            children: [/*#__PURE__*/_jsxDEV(Info, {\n              children: [/*#__PURE__*/_jsxDEV(Strong, {\n                children: \"Top Level Domain:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 35\n              }, this), country.tld]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Info, {\n              children: [/*#__PURE__*/_jsxDEV(Strong, {\n                children: \"Currencies:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 35\n              }, this), country.currencies ? Object.values(currencies)[0].name : 'No currencies']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Info, {\n              children: [/*#__PURE__*/_jsxDEV(Strong, {\n                children: \"Languages:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 35\n              }, this), renderLanguages()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(BordersContainer, {\n          children: [/*#__PURE__*/_jsxDEV(Strong, {\n            children: \"Border Countries:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), renderBorders()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DetailPage, \"KRsO4F/RfSXeShhp7OUIZVO4nyw=\", false, function () {\n  return [useCountriesContext];\n});\n\n_c = DetailPage;\nexport default DetailPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailPage\");","map":{"version":3,"sources":["C:/Users/celio/OneDrive/Documents/Programacao/React/countries-api-rest/src/components/DetailPage/DetailPage.js"],"names":["React","useState","useEffect","Wrapper","Back","Container","Image","InfoContainer","Title","InfoColumns","Column","Info","BordersContainer","Button","Strong","Link","BsArrowLeft","useCountriesContext","DetailPage","match","theme","countries","setCountries","country","setCountry","loading","setLoading","nativeName","setNativeName","currencies","setCurrencies","languages","setLanguages","langs","setLangs","borders","setBorders","convertedBorders","setConvertedBorders","filterBorder","setFilterBorder","fetch","params","id","then","res","json","data","name","lang","c","common","cca3","filter","item","includes","renderCapitals","capital","map","cap","index","length","renderLanguages","renderBorders","textDecoration","flags","svg","Object","values","population","region","subregion","tld"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from 'react'\r\nimport { Wrapper,Back,Container ,Image, InfoContainer, Title, InfoColumns, Column,Info,BordersContainer, Button,Strong,} from './styles'\r\n\r\nimport { Link} from 'react-router-dom'\r\nimport {BsArrowLeft} from 'react-icons/bs'\r\nimport { useCountriesContext } from '../ContextCountries/context'\r\nfunction DetailPage({match,theme}) {\r\n    \r\n    const {countries,setCountries} = useCountriesContext()\r\n    const [country,setCountry] = useState([])\r\n    const [loading,setLoading] = useState(true)\r\n    const [nativeName,setNativeName] = useState([])\r\n    const [currencies,setCurrencies] = useState([])\r\n    const [languages,setLanguages] = useState()\r\n    const [langs,setLangs] = useState([])\r\n    const [borders,setBorders] = useState([])\r\n    const [convertedBorders,setConvertedBorders] = useState([])\r\n    const [filterBorder,setFilterBorder] = useState([])\r\n    \r\n    \r\n    useEffect(() =>{\r\n        setLangs([])\r\n        setFilterBorder([])\r\n        fetch('https://restcountries.com/v3.1/alpha/' + match.params.id )\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setCountry(data[0])\r\n            setNativeName(data[0].name.nativeName)\r\n            setCurrencies(data[0].currencies)\r\n            setLanguages(data[0].languages)\r\n            setBorders(data[0].borders)\r\n            setLoading(false)\r\n        })\r\n\r\n    }, [match.params.id])\r\n\r\n    //Converts the language objects into an array\r\n    useEffect(() =>{\r\n        \r\n        for(let lang in languages){\r\n            setLangs( langs =>[...langs,languages[lang]])\r\n        }\r\n    \r\n    },[languages])\r\n    \r\n    //Create a array of ojc with id as country cca3 and name as country name\r\n    useEffect(() =>{\r\n\r\n        \r\n        for(let c in countries){\r\n            setConvertedBorders(convertedBorders =>[...convertedBorders, {\r\n                name : countries[c].name.common,\r\n                id: countries[c].cca3\r\n            }])\r\n        }\r\n        \r\n    },[countries])\r\n\r\n    //Compares the obj array with the borders arrays to match the border and cca3 parameters\r\n    useEffect(()=>{\r\n        if(borders){\r\n        let filter = convertedBorders.filter(item => borders.includes(item.id))\r\n        setFilterBorder(filterBorder =>[...filterBorder,...filter])\r\n        }\r\n    },[borders])\r\n\r\n    if(loading){\r\n        return <div>loading</div>\r\n    }\r\n\r\n    \r\n    const renderCapitals = () =>{\r\n        \r\n        if(country.capital){\r\n        return  country.capital.map((cap,index) =>(\r\n            <div key = {index}> {index !== country.capital.length - 1 ? cap + ',' : cap} </div>\r\n            ))}\r\n        else{\r\n            return <div>No capital</div>\r\n        }\r\n    }\r\n\r\n    const renderLanguages = () =>{\r\n        if(langs.length > 0){\r\n         return langs.map((item,index) =>(\r\n            <div key = {index}>\r\n                {index !== langs.length -1 ? item + ',' : item}\r\n            </div>))}  \r\n        else{\r\n            return <div>No languages</div>\r\n        }\r\n    }\r\n    \r\n    const renderBorders = () =>{\r\n        if(filterBorder.length > 0){\r\n            return filterBorder.map((item,index) => (\r\n            <Link to = {'/details/' + item.id} key = {index} ><Button>{item.name}</Button></Link>))\r\n        }else{\r\n            return <div>No borders</div>\r\n        }\r\n    }\r\n    return (    \r\n        <Wrapper className = 'container'>\r\n            <Link to ='/' style={{ textDecoration: 'none' }}>\r\n                <Back><BsArrowLeft color = {theme ==='dark' ? '#fff' : '#000'} size = {22}/>Back</Back>\r\n            </Link>\r\n            <Container >\r\n                <Image src = {country.flags.svg}/>\r\n                <InfoContainer>\r\n                    <Title>{country.name.common}</Title>\r\n                    <InfoColumns>\r\n                        <Column>\r\n                            <Info><Strong>Native Name:</Strong>\r\n                             { country.name.nativeName ? Object.values(nativeName)[0].common : 'No native name'}\r\n                             </Info>\r\n                            <Info><Strong>Population:</Strong>\r\n                                 {country.population}\r\n                            </Info>\r\n                            <Info><Strong>Region:</Strong>\r\n                                 {country.region}\r\n                            </Info>\r\n                            <Info><Strong>Sub Region:</Strong>\r\n                                 {country.subregion ? country.subregion : 'No subregions'}\r\n                            </Info>\r\n                            <Info><Strong>Capital:</Strong> \r\n                                {renderCapitals()}\r\n                            </Info>\r\n                        </Column>\r\n                        <Column>\r\n                            <Info><Strong>Top Level Domain:</Strong>\r\n                                {country.tld}\r\n                            </Info>\r\n                            <Info><Strong>Currencies:</Strong>\r\n                                { country.currencies ? Object.values(currencies)[0].name : 'No currencies'}\r\n                             </Info>\r\n                            <Info><Strong>Languages:</Strong> \r\n                                {renderLanguages()}\r\n                            </Info>\r\n                        </Column>\r\n                    </InfoColumns>\r\n                    <BordersContainer>\r\n                        <Strong>Border Countries:</Strong>\r\n                        {renderBorders()}\r\n                    </BordersContainer>\r\n                </InfoContainer>\r\n            </Container>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default DetailPage\r\n"]},"metadata":{},"sourceType":"module"}