{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\celio\\\\OneDrive\\\\Documents\\\\Programacao\\\\React\\\\countries-api-rest\\\\src\\\\components\\\\DetailPage\\\\DetailPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Wrapper, Back, Container, Image, InfoContainer, Title, InfoColumns, Column, Info, BordersContainer, Button, Strong } from './styles';\nimport { Link } from 'react-router-dom';\nimport { BsArrowLeft } from 'react-icons/bs';\nimport { useCountriesContext } from '../ContextCountries/context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DetailPage({\n  match,\n  theme\n}) {\n  _s();\n\n  const [langs, setLangs] = useState([]);\n  const {\n    countries,\n    setCountries\n  } = useCountriesContext();\n  const [country, setCountry] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [nativeName, setNativeName] = useState([]);\n  const [currencies, setCurrencies] = useState([]);\n  const [languages, setLanguages] = useState();\n  const [borders, setBorders] = useState([]);\n  const [convertedBorders, setConvertedBorders] = useState([]);\n  const [filterBorder, setFilterBorder] = useState([]);\n  useEffect(() => {\n    fetch('https://restcountries.com/v3.1/alpha/' + match.params.id).then(res => res.json()).then(data => {\n      setCountry(data[0]);\n      setNativeName(data[0].name.nativeName);\n      setCurrencies(data[0].currencies);\n      setLanguages(data[0].languages);\n      setBorders(data[0].borders);\n      setFilterBorder([]);\n      setLoading(false);\n    });\n  }, [match.params.id]); //Converts the language objects into an array\n\n  useEffect(() => {\n    for (let lang in languages) {\n      setLangs(langs => [...langs, languages[lang]]);\n    }\n  }, [languages]); //Create a array of ojc with id as country cca3 and name as country name\n\n  useEffect(() => {\n    for (let c in countries) {\n      setConvertedBorders(convertedBorders => [...convertedBorders, {\n        name: countries[c].name.common,\n        id: countries[c].cca3\n      }]);\n    }\n  }, [countries]); //Compares the obj array with the borders arrays to match the border and cca3 parameters\n\n  useEffect(() => {\n    if (borders) {\n      let filter = convertedBorders.filter(item => borders.includes(item.id));\n      setFilterBorder(filterBorder => [...filterBorder, ...filter]);\n    }\n  }, [borders]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(Back, {\n        children: [/*#__PURE__*/_jsxDEV(BsArrowLeft, {\n          color: theme === 'dark' ? '#fff' : '#000',\n          size: 22\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 23\n        }, this), \"Back\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        src: country.flags.svg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InfoContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: country.name.common\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InfoColumns, {\n          children: [/*#__PURE__*/_jsxDEV(Column, {\n            children: [/*#__PURE__*/_jsxDEV(Info, {\n              children: [/*#__PURE__*/_jsxDEV(Strong, {\n                children: \"Native Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 35\n              }, this), \" \", country.name.nativeName ? Object.values(nativeName)[0].common : 'No native name']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Info, {\n              children: [/*#__PURE__*/_jsxDEV(Strong, {\n                children: \"Population:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 35\n              }, this), \" \", country.population]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Info, {\n              children: [/*#__PURE__*/_jsxDEV(Strong, {\n                children: \"Region:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 35\n              }, this), \" \", country.region]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Info, {\n              children: [/*#__PURE__*/_jsxDEV(Strong, {\n                children: \"Sub Region:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 35\n              }, this), \" \", country.subregion ? country.subregion : 'No subregions']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Info, {\n              children: [/*#__PURE__*/_jsxDEV(Strong, {\n                children: \"Capital:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 35\n              }, this), \" \", country.capital ? country.capital : 'No capital']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            children: [/*#__PURE__*/_jsxDEV(Info, {\n              children: [/*#__PURE__*/_jsxDEV(Strong, {\n                children: \"Top Level Domain:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 35\n              }, this), \" \", country.tld]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Info, {\n              children: [/*#__PURE__*/_jsxDEV(Strong, {\n                children: \"Currencies:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 35\n              }, this), \" \", country.currencies ? Object.values(currencies)[0].name : 'No currencies']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Info, {\n              children: [/*#__PURE__*/_jsxDEV(Strong, {\n                children: \"Languages:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 35\n              }, this), langs.length > 0 ? langs.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: index !== langs.length - 1 ? item + ',' : item\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this)) : 'No languages']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(BordersContainer, {\n          children: [/*#__PURE__*/_jsxDEV(Strong, {\n            children: \"Border Countries:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), filterBorder.length > 0 ? filterBorder.map((item, index) => /*#__PURE__*/_jsxDEV(Link, {\n            to: '/details/' + item.id,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 82\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 33\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"No borders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DetailPage, \"+pqunLf7cU+s+HD4Wc8qQb9yBT0=\", false, function () {\n  return [useCountriesContext];\n});\n\n_c = DetailPage;\nexport default DetailPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailPage\");","map":{"version":3,"sources":["C:/Users/celio/OneDrive/Documents/Programacao/React/countries-api-rest/src/components/DetailPage/DetailPage.js"],"names":["React","useState","useEffect","Wrapper","Back","Container","Image","InfoContainer","Title","InfoColumns","Column","Info","BordersContainer","Button","Strong","Link","BsArrowLeft","useCountriesContext","DetailPage","match","theme","langs","setLangs","countries","setCountries","country","setCountry","loading","setLoading","nativeName","setNativeName","currencies","setCurrencies","languages","setLanguages","borders","setBorders","convertedBorders","setConvertedBorders","filterBorder","setFilterBorder","fetch","params","id","then","res","json","data","name","lang","c","common","cca3","filter","item","includes","flags","svg","Object","values","population","region","subregion","capital","tld","length","map","index"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from 'react'\r\nimport { Wrapper,Back,Container ,Image, InfoContainer, Title, InfoColumns, Column,Info,BordersContainer, Button,Strong,} from './styles'\r\n\r\nimport { Link} from 'react-router-dom'\r\nimport {BsArrowLeft} from 'react-icons/bs'\r\nimport { useCountriesContext } from '../ContextCountries/context'\r\nfunction DetailPage({match,theme}) {\r\n    const [langs,setLangs] = useState([])\r\n    const {countries,setCountries} = useCountriesContext()\r\n    const [country,setCountry] = useState([])\r\n    const [loading,setLoading] = useState(true)\r\n    const [nativeName,setNativeName] = useState([])\r\n    const [currencies,setCurrencies] = useState([])\r\n    const [languages,setLanguages] = useState()\r\n    \r\n    const [borders,setBorders] = useState([])\r\n    const [convertedBorders,setConvertedBorders] = useState([])\r\n    const [filterBorder,setFilterBorder] = useState([])\r\n    \r\n    \r\n    useEffect(() =>{\r\n        \r\n        fetch('https://restcountries.com/v3.1/alpha/' + match.params.id )\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setCountry(data[0])\r\n            setNativeName(data[0].name.nativeName)\r\n            setCurrencies(data[0].currencies)\r\n            setLanguages(data[0].languages)\r\n            setBorders(data[0].borders)\r\n            setFilterBorder([])\r\n            setLoading(false)\r\n            \r\n        })\r\n        \r\n\r\n    }, [match.params.id])\r\n\r\n    //Converts the language objects into an array\r\n    useEffect(() =>{\r\n        \r\n        for(let lang in languages){\r\n            setLangs( langs =>[...langs,languages[lang]])\r\n        }\r\n    \r\n    },[languages])\r\n    \r\n    //Create a array of ojc with id as country cca3 and name as country name\r\n    useEffect(() =>{\r\n\r\n        \r\n        for(let c in countries){\r\n            setConvertedBorders(convertedBorders =>[...convertedBorders, {\r\n                name : countries[c].name.common,\r\n                id: countries[c].cca3\r\n            }])\r\n        }\r\n        \r\n    },[countries])\r\n\r\n    //Compares the obj array with the borders arrays to match the border and cca3 parameters\r\n    useEffect(()=>{\r\n        if(borders){\r\n        let filter = convertedBorders.filter(item => borders.includes(item.id))\r\n        setFilterBorder(filterBorder =>[...filterBorder,...filter])\r\n        }\r\n    },[borders])\r\n\r\n    if(loading){\r\n        return <div>loading</div>\r\n    }\r\n\r\n    \r\n    \r\n    \r\n    return (    \r\n        <Wrapper className = 'container'>\r\n            <Link to ='/'>\r\n                <Back><BsArrowLeft color = {theme ==='dark' ? '#fff' : '#000'} size = {22}/>Back</Back>\r\n            </Link>\r\n            <Container >\r\n                <Image src = {country.flags.svg}/>\r\n                <InfoContainer>\r\n                    <Title>{country.name.common}</Title>\r\n                    <InfoColumns>\r\n                        <Column>\r\n                            <Info><Strong>Native Name:</Strong> { country.name.nativeName ? Object.values(nativeName)[0].common : 'No native name'}</Info>\r\n                            <Info><Strong>Population:</Strong> {country.population}</Info>\r\n                            <Info><Strong>Region:</Strong> {country.region}</Info>\r\n                            <Info><Strong>Sub Region:</Strong> {country.subregion ? country.subregion : 'No subregions'}</Info>\r\n                            <Info><Strong>Capital:</Strong> {country.capital ? country.capital : 'No capital'}</Info>\r\n                        </Column>\r\n                        <Column>\r\n                            <Info><Strong>Top Level Domain:</Strong> {country.tld}</Info>\r\n                            <Info><Strong>Currencies:</Strong> { country.currencies ?Object.values(currencies)[0].name : 'No currencies'}</Info>\r\n                            <Info><Strong>Languages:</Strong> \r\n                                { langs.length > 0 ? langs.map((item,index) =>(\r\n                                <div key = {index}>\r\n                                    {index !== langs.length -1 ? item + ',' : item}\r\n                                </div>)) : 'No languages'}\r\n                            </Info>\r\n                        </Column>\r\n                    </InfoColumns>\r\n                    <BordersContainer>\r\n                        <Strong>Border Countries:</Strong>\r\n                            {  filterBorder.length > 0 ? filterBorder.map((item,index) => (\r\n                                <Link to = {'/details/' + item.id} key = {index}><Button>{item.name}</Button></Link>\r\n                                \r\n                            )): <div>No borders</div>}\r\n                        \r\n                    </BordersContainer>\r\n                </InfoContainer>\r\n            </Container>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default DetailPage\r\n"]},"metadata":{},"sourceType":"module"}